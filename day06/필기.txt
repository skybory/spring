  - redirectAttribute.addAttribute
 : url 뒤에 붙으며, 리프레시해도 데이터가 유지됨

  - redirectAttribute.addFlashAttribute
 : url 뒤에 붙지 않으며, 일회성이라 리프레시할 경우 데이터가 소멸. 엄격하게 데이터를 관리할 경우 주로 사용


1. 로그인 처리하기
  - 로그인 상태 유지 : 쿠키(권장X)
  - 로그인 상태 유지 : 세션(권장O)

2. session
  - 세션의 create 옵션
  - request.getSession(true);
	: 세션이 있으면 기존 세션을 반환한다
	없으면 새로운 세션을 생성해서 반환한다.
	true 가 기본값

  - request.getSession(false);
	: 세션이 있으면 기존 세션을 반환
	 세션이 없으면 새로운 세션을 생성하지 않고 null을 반환한다.

3. 서블릿 필터
  - 필터는 서블릿이 지원하는 수장문이다.
  - HTTP 요청 -> WAS (Apache Tomcat) ->필터 -> 서블릿 -> 컨트롤러
  - 필터를 적용하면 필터가 호출된 다음에 서블릿이 호출이 된다. 그래서 모든 고객의 요청 로그를 남기는
  요구사항이 있다면 필터를 사용해야 한다.
  - 스프링 사용시 서블릿은 스프링의 디스패쳐 서블릿으로 생각하면 된다.
 
3-1. 필터 제한
  - HTTP 요청 -> WAS -> 필터(적절하지 않은 요청이라고 판단, 서블릿 호출 X) 

3-2. 필터 체인
  - HTTP 요청 -> WAS -> 필터1 -> 필터2 -> 필터3 -> 서블릿 요청 -> 컨트롤러

  - 필터는 체인으로 구성되는데, 중간에 필터를 자유롭게 추가할 수 있다. 예를 들어 로그를 남기는 필터를
먼저 적용한 후, 그 다음에 로그인 여부를 체크하는 필터를 만들 수 있다.