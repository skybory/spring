plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.codingbox '
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
  	testAnnotationProcessor 'org.projectlombok:lombok'
  	implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.2.9.Final'
	
	// query dsl
   	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
   	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
   
   	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
  main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {
  options.generatedSourceOutputDirectory = file(querydslDir)
}
clean.doLast {
  file(querydslDir).deleteDir()
}